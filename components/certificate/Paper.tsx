/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 paper.glb -tT 
Files: paper.glb [1.28KB] > /Users/jberesford/projects/drixit-blog/components/cert/paper-transformed.glb [1.1KB] (14%)
*/

import { Mesh } from "three";
import { useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import model from "./paper.glb?url";
import image from "./gwc_cert.png";

type GLTFResult = GLTF & {
  nodes: {
    Plane: Mesh;
  };
};

export function CertificatePaper(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF(model) as unknown as GLTFResult;
  const texture = useTexture(image.src, (t) => {
    t.flipY = false;
  });

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry}>
        <meshStandardMaterial
          map={texture}
          envMapIntensity={1}
          roughness={0.35}
          metalness={1}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload(model);
